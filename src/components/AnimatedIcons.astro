---
---
<div class="animated-icons-container">
  <!-- Rocket Icon -->
  <a href="/blog" class="icon-link btn-animate">
    <div class="icon-wrapper rocket-icon">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M4.5 16.5c-1.5 1.26-2 5-2 5s3.74-.5 5-2c.71-.84.7-2.13-.09-2.91a2.18 2.18 0 0 0-2.91-.09z"></path>
        <path d="m12 15-3-3a22 22 0 0 1 2-3.95A12.88 12.88 0 0 1 22 2c0 2.72-.78 7.5-6 11a22.35 22.35 0 0 1-4 2z"></path>
        <path d="M9 12H4s.55-3.03 2-4c1.62-1.08 5 0 5 0"></path>
        <path d="M12 15v5s3.03-.55 4-2c1.08-1.62 0-5 0-5"></path>
      </svg>
    </div>
  </a>

  <!-- Cloud Icon -->
  <a href="/blog" class="icon-link btn-animate">
    <div class="icon-wrapper cloud-icon">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M17.5 19H9a7 7 0 1 1 6.71-9h1.79a4.5 4.5 0 1 1 0 9Z"></path>
      </svg>
    </div>
  </a>

  <!-- Code Icon -->
  <a href="/blog" class="icon-link btn-animate">
    <div class="icon-wrapper code-icon">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <polyline points="16 18 22 12 16 6"></polyline>
        <polyline points="8 6 2 12 8 18"></polyline>
      </svg>
    </div>
  </a>

  <!-- Server Icon -->
  <a href="/blog" class="icon-link btn-animate">
    <div class="icon-wrapper server-icon">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <rect width="20" height="8" x="2" y="2" rx="2" ry="2"></rect>
        <rect width="20" height="8" x="2" y="14" rx="2" ry="2"></rect>
        <line x1="6" x2="6.01" y1="6" y2="6"></line>
        <line x1="6" x2="6.01" y1="18" y2="18"></line>
      </svg>
    </div>
  </a>
</div>

<style>
  .animated-icons-container {
    display: flex;
    justify-content: space-around;
    margin: 2rem 0;
    flex-wrap: wrap;
    gap: 1rem;
  }

  .icon-link {
    display: inline-block;
  }
  
  /* Override any transform effects from btn-animate class */
  .icon-link.btn-animate:hover {
    transform: none;
  }

  .icon-wrapper {
    @apply flex items-center justify-center;
    @apply w-12 h-12 rounded-full;
    @apply bg-gray-100 text-blue-600 dark:bg-gray-700 dark:text-blue-400;
    @apply transition-all duration-300;
    position: relative;
    cursor: pointer;
  }

  .icon-wrapper:hover {
    @apply shadow-md transform scale-110;
  }

  /* Rocket animation */
  .rocket-icon:hover svg {
    animation: rocketShake 0.8s ease-in-out infinite;
  }

  @keyframes rocketShake {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-5px); }
  }

  /* Cloud animation */
  .cloud-icon svg {
    transition: all 0.5s ease;
  }

  .cloud-icon:hover svg {
    transform: scale(1.1);
    filter: drop-shadow(0 0 3px currentColor);
  }

  /* Code animation */
  .code-icon:hover svg {
    animation: codeTyping 1s ease infinite;
  }

  @keyframes codeTyping {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-2px); }
    75% { transform: translateX(2px); }
  }

  /* Server animation */
  .server-icon:hover svg {
    animation: serverPulse 1.5s ease infinite;
  }

  @keyframes serverPulse {
    0% { opacity: 1; }
    50% { opacity: 0.7; }
    100% { opacity: 1; }
  }
</style>

<script>
  // Add a small random delay to each icon to make them appear one after another
  document.addEventListener('DOMContentLoaded', () => {
    const icons = document.querySelectorAll('.icon-wrapper');
    
    icons.forEach((icon, index) => {
      const element = icon as HTMLElement;
      element.style.opacity = '0';
      element.style.transform = 'translateY(20px)';
      element.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
      
      setTimeout(() => {
        element.style.opacity = '1';
        element.style.transform = 'translateY(0)';
      }, 100 * (index + 1));
    });
  });
</script>