---
import TagList from './TagList.astro';
import type { CollectionEntry } from 'astro:content';

interface Props {
    post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;
const { title, description, heroImage, tags = [] } = post.data;
---

<div class="card">
    <div class="image-container">
        {heroImage && <img src={heroImage} alt={description} />}
        <div class="image-overlay">
            <div class="read-indicator">Read Post</div>
        </div>
    </div>
    <div class="content">
        <h3 class="post-title">{title}</h3>
        <p class="post-description">{description}</p>
        <TagList tags={tags} className="post-tags" />
        <a href={`/blog/${post.slug}/`} class="read-more-link">
            Read full article
            <svg class="arrow-icon" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <line x1="5" y1="12" x2="19" y2="12"></line>
                <polyline points="12 5 19 12 12 19"></polyline>
            </svg>
            <span class="sr-only"> - {title} - {description}</span>
        </a>
    </div>
</div>

<style>
  .card {
    @apply flex-1 min-w-[300px] max-w-md m-4 bg-white dark:bg-gray-800 rounded-lg overflow-hidden;
    @apply border border-gray-200 dark:border-gray-700;
    @apply transition-all duration-300 ease-in-out;
    @apply shadow-sm;
    position: relative;
    transform-style: preserve-3d;
    perspective: 1000px;
  }
  
  .card:hover {
    @apply -translate-y-2 shadow-md;
    transform: rotateX(2deg) rotateY(0deg);
  }
  
  .image-container {
    @apply relative overflow-hidden;
  }
  
  .card img {
    @apply w-full h-auto object-cover transition-transform duration-300;
  }
  
  .card:hover img {
    transform: scale(1.05);
  }
  
  .image-overlay {
    @apply absolute inset-0 bg-black bg-opacity-0 flex items-center justify-center transition-all duration-300;
    opacity: 0;
  }
  
  .card:hover .image-overlay {
    @apply bg-opacity-30;
    opacity: 1;
  }
  
  .read-indicator {
    @apply px-4 py-2 bg-blue-600 text-white rounded-md transform translate-y-4 opacity-0 transition-all duration-300;
  }
  
  .card:hover .read-indicator {
    @apply translate-y-0 opacity-100;
  }
  
  .content {
    @apply p-6;
  }
  
  .post-title {
    @apply transition-colors duration-300;
    position: relative;
    display: inline-block;
  }
  
  .post-title::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 0;
    height: 2px;
    @apply bg-blue-600 dark:bg-blue-400;
    transition: width 0.3s ease;
  }
  
  .card:hover .post-title::after {
    width: 100%;
  }
  
  .post-description {
    @apply mt-2 transition-all duration-300;
  }
  
  .sr-only {
    @apply absolute w-px h-px p-0 -m-px overflow-hidden whitespace-nowrap border-0;
  }
  
  .read-more-link {
    @apply mt-4 flex items-center gap-2;
    @apply text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300;
    @apply transition-all duration-200;
  }
  
  .arrow-icon {
    @apply transition-transform duration-300;
    transform: translateX(0);
  }
  
  .read-more-link:hover .arrow-icon {
    transform: translateX(5px);
  }
</style>
