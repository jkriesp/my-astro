---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import TagList from '../components/TagList.astro';
import RelatedPosts from '../components/RelatedPosts.astro';
import { Image } from 'astro:assets';
import { Code } from 'astro:components';

// Import placeholder images
import placeholder1 from '../images/blog-placeholder-1.jpg';
import placeholder2 from '../images/blog-placeholder-2.jpg';
import placeholder3 from '../images/blog-placeholder-3.jpg';
import placeholder4 from '../images/blog-placeholder-4.jpg';
import placeholder5 from '../images/blog-placeholder-5.jpg';
import placeholderAbout from '../images/blog-placeholder-about.jpg';

type Props = CollectionEntry<'blog'> | {
  title: string;
  description: string;
  pubDate: Date;
  updatedDate?: Date;
  heroImage?: string;
  tags?: string[];
  slug?: string;
};

const props = Astro.props;
const { title, description, pubDate, updatedDate, heroImage, tags = [] } = 
  'data' in props ? props.data : props;
const slug = 'slug' in props ? props.slug : '';
const Content = 'render' in props ? (await props.render()).Content : null;

// Map hero image paths to the imported image objects
const heroImageMap = {
  '/blog-placeholder-1.jpg': placeholder1,
  '/blog-placeholder-2.jpg': placeholder2,
  '/blog-placeholder-3.jpg': placeholder3,
  '/blog-placeholder-4.jpg': placeholder4,
  '/blog-placeholder-5.jpg': placeholder5,
  '/blog-placeholder-about.jpg': placeholderAbout
};

// Get the appropriate image based on the heroImage path
const imageSource = heroImage ? heroImageMap[heroImage as keyof typeof heroImageMap] : undefined;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			/* Removing the conflicting main styling */
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: var(--text);
			}
			/* Make text area wider on mobile screens */
			@media (max-width: 768px) {
				.prose {
					max-width: calc(100% - 1em);
					padding: 0.5em;
				}
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
				color: var(--text-header);
			}
			.date {
				margin-bottom: 0.5em;
				color: var(--text);
			}
			.last-updated-on {
				font-style: italic;
				margin-bottom: 0.5em;
			}
			.post-tags {
				margin: 1rem 0;
				}
			
			/* Additional blog post heading styles */
			.prose :global(h1),
			.prose :global(h2),
			.prose :global(h3),
			.prose :global(h4),
			.prose :global(h5),
			.prose :global(h6) {
				margin-top: 1.2em;
				margin-bottom: 0.5em;
				line-height: 1.2;
			}
			
			.prose :global(h2) {
				margin-top: 1.3em;
			}
			
			.prose :global(h3) {
				margin-top: 1.1em;
			}
			
			/* Add a little more space after headings that are followed by text */
			.prose :global(h2) + :global(p),
			.prose :global(h3) + :global(p),
			.prose :global(h4) + :global(p) {
				margin-top: 0.7em;
			}
			
			/* Less spacing between consecutive headings */
			.prose :global(h2) + :global(h3),
			.prose :global(h3) + :global(h4),
			.prose :global(h4) + :global(h5) {
				margin-top: 0.8em;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
						{imageSource && (
						<Image 
							src={imageSource}
							alt={`Hero image for ${title}`} 
							width={1020} 
							height={510}
							quality={90}
							class="hero-img"
						/>
					)}
				</div>
				<div class="prose">
					<div class="title">
						<h1>{title}</h1>
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<TagList tags={tags} className="post-tags" />
					</div>
					{Content ? <Content /> : <slot />}
				</div>
			</article>
			
			<!-- Related Posts section -->
			<div class="related-posts-container">
				<RelatedPosts currentPostSlug={slug || ''} tags={tags} limit={3} />
			</div>
		</main>
		<Footer />
		
		<style>
			.related-posts-container {
				width: 100%;
				max-width: 1200px;
				margin: 0 auto;
				padding: 0 1em;
			}
			
			.hero-img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
		</style>
	</body>
</html>
